{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\megza\\\\source\\\\repos\\\\udemy\\\\12-adv-starting-project\\\\frontend\\\\src\\\\components\\\\pages\\\\EventsPage.jsx\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json } from 'react-router-dom';\nimport EventsList from '../EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  if (data.isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(EventsList, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    //return {isError: true, message: \"Could not fetch events\"};\n    // throw new Response(JSON.stringify({message: \"Could not fetch events.\"}), {\n    //     status: 500\n    // });\n    return json({\n      message: \"Could not fetch events.\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\n;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","data","isError","children","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","status","$RefreshReg$"],"sources":["C:/Users/megza/source/repos/udemy/12-adv-starting-project/frontend/src/components/pages/EventsPage.jsx"],"sourcesContent":["import { useLoaderData, json } from 'react-router-dom';\r\n\r\nimport EventsList from '../EventsList';\r\n\r\nfunction EventsPage() {\r\n    const data = useLoaderData();\r\n\r\n    if(data.isError) {\r\n        return <p>{data.message}</p>\r\n    }\r\n\r\n  return (\r\n    <EventsList />\r\n  );\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nexport async function loader() {\r\n    const response = await fetch('http://localhost:8080/events');\r\n    if (!response.ok) {\r\n        //return {isError: true, message: \"Could not fetch events\"};\r\n        // throw new Response(JSON.stringify({message: \"Could not fetch events.\"}), {\r\n        //     status: 500\r\n        // });\r\n        return json(\r\n            {message: \"Could not fetch events.\"},\r\n            {status: 500}    \r\n        );\r\n\r\n    } else {\r\n        return response;\r\n    }\r\n};"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,IAAI,QAAQ,kBAAkB;AAEtD,OAAOC,UAAU,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,IAAI,GAAGP,aAAa,CAAC,CAAC;EAE5B,IAAGO,IAAI,CAACC,OAAO,EAAE;IACb,oBAAOJ,OAAA;MAAAK,QAAA,EAAIF,IAAI,CAACG;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAChC;EAEF,oBACEV,OAAA,CAACF,UAAU;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAElB;AAACR,EAAA,CAVQD,UAAU;EAAA,QACFL,aAAa;AAAA;AAAAe,EAAA,GADrBV,UAAU;AAYnB,eAAeA,UAAU;AAEzB,OAAO,eAAeW,MAAMA,CAAA,EAAG;EAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAC5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACd;IACA;IACA;IACA;IACA,OAAOlB,IAAI,CACP;MAACS,OAAO,EAAE;IAAyB,CAAC,EACpC;MAACU,MAAM,EAAE;IAAG,CAChB,CAAC;EAEL,CAAC,MAAM;IACH,OAAOH,QAAQ;EACnB;AACJ;AAAC;AAAC,IAAAF,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}