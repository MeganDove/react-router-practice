{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\megza\\\\source\\\\repos\\\\udemy\\\\12-adv-starting-project\\\\frontend\\\\src\\\\components\\\\pages\\\\NewEventPage.jsx\";\nimport { json } from \"react-router-dom\";\nimport EventForm from \"../EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n_c = NewEventPage;\nexport async function action({\n  request,\n  params\n}) {\n  const data = await request.formData();\n  const eventData = {\n    title: data.get(\"title\"),\n    image: data.get(\"image\"),\n    date: data.get(\"date\"),\n    description: data.get(\"description\")\n  };\n  const response = fetch(\"http:localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    throw json({\n      message: \"Could not save event\"\n    }, {\n      status: 500\n    });\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["json","EventForm","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","ok","message","status","$RefreshReg$"],"sources":["C:/Users/megza/source/repos/udemy/12-adv-starting-project/frontend/src/components/pages/NewEventPage.jsx"],"sourcesContent":["import { json } from \"react-router-dom\";\r\nimport EventForm from \"../EventForm\";\r\n\r\nexport default function NewEventPage() {\r\n    return (\r\n        <EventForm />\r\n    );\r\n}\r\n\r\nexport async function action({request, params}) {\r\n    const data = await request.formData();\r\n    const eventData = {\r\n        title: data.get(\"title\"),\r\n        image: data.get(\"image\"),\r\n        date: data.get(\"date\"),\r\n        description: data.get(\"description\")\r\n    };\r\n\r\n    const response = fetch(\"http:localhost:8080/events\", {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(eventData)\r\n    });\r\n\r\n    if(!response.ok) {\r\n        throw json(\r\n            {message: \"Could not save event\"},\r\n            {status: 500}\r\n        );\r\n    }\r\n}"],"mappings":";AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,SAAS,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,eAAe,SAASC,YAAYA,CAAA,EAAG;EACnC,oBACID,OAAA,CAACF,SAAS;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAErB;AAACC,EAAA,GAJuBL,YAAY;AAMpC,OAAO,eAAeM,MAAMA,CAAC;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAE;EAC5C,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EACrC,MAAMC,SAAS,GAAG;IACdC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACvC,CAAC;EAED,MAAMI,QAAQ,GAAGC,KAAK,CAAC,4BAA4B,EAAE;IACjDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EAClC,CAAC,CAAC;EAEF,IAAG,CAACM,QAAQ,CAACO,EAAE,EAAE;IACb,MAAM5B,IAAI,CACN;MAAC6B,OAAO,EAAE;IAAsB,CAAC,EACjC;MAACC,MAAM,EAAE;IAAG,CAChB,CAAC;EACL;AACJ;AAAC,IAAArB,EAAA;AAAAsB,YAAA,CAAAtB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}