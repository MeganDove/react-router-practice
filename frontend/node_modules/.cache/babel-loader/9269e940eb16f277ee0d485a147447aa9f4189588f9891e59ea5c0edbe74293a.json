{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\megza\\\\source\\\\repos\\\\udemy\\\\12-adv-starting-project\\\\frontend\\\\src\\\\components\\\\pages\\\\EventDetailPage.jsx\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EventDetailPage() {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this)\n  }, void 0, false);\n}\n_s(EventDetailPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetailPage;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event.\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useLoaderData","json","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","data","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","eventId","response","fetch","ok","message","status","$RefreshReg$"],"sources":["C:/Users/megza/source/repos/udemy/12-adv-starting-project/frontend/src/components/pages/EventDetailPage.jsx"],"sourcesContent":["import { useLoaderData, json } from \"react-router-dom\";\r\n\r\nimport EventItem from \"../components/EventItem.jsx\";\r\n\r\nexport default function EventDetailPage() {\r\n    const data = useLoaderData();\r\n\r\n    return (\r\n        <>\r\n           <EventItem event={data.event} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport async function loader({request, params}) {\r\n    const id = params.eventId;\r\n\r\n    const response = await fetch(\"http://localhost/events/\"+id);\r\n   if(!response.ok) {\r\n    throw json(\r\n        {message: \"Could not fetch details for selected event.\"},\r\n        {status: 500}\r\n    );\r\n   } else {\r\n    return response;\r\n   }\r\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,IAAI,QAAQ,kBAAkB;AAEtD,OAAOC,SAAS,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpD,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAMC,IAAI,GAAGT,aAAa,CAAC,CAAC;EAE5B,oBACII,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACGN,OAAA,CAACF,SAAS;MAACS,KAAK,EAAEF,IAAI,CAACE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBACjC,CAAC;AAEX;AAACP,EAAA,CARuBD,eAAe;EAAA,QACtBP,aAAa;AAAA;AAAAgB,EAAA,GADNT,eAAe;AAUvC,OAAO,eAAeU,MAAMA,CAAC;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAE;EAC5C,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EAEzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0BAA0B,GAACH,EAAE,CAAC;EAC5D,IAAG,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMvB,IAAI,CACN;MAACwB,OAAO,EAAE;IAA6C,CAAC,EACxD;MAACC,MAAM,EAAE;IAAG,CAChB,CAAC;EACF,CAAC,MAAM;IACN,OAAOJ,QAAQ;EAChB;AACH;AAAC,IAAAN,EAAA;AAAAW,YAAA,CAAAX,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}